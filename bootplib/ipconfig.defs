/*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 * 
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */

#include <mach/std_types.defs>

subsystem ipconfig 10000;
serverprefix _;

import <ipconfig_types.h>;

#ifdef MOSX
type port_t = mach_port_t;
type ip_address_t = MACH_MSG_TYPE_INTEGER_32;
type ipconfig_method_t = MACH_MSG_TYPE_INTEGER_32;
type ipconfig_status_t = MACH_MSG_TYPE_INTEGER_32;
#else
type ip_address_t = MSG_TYPE_INTEGER_32;
type ipconfig_method_t = MSG_TYPE_INTEGER_32;
type ipconfig_status_t = MSG_TYPE_INTEGER_32;
#endif

type if_name_t = array[32] of char;
type ooline_data_t = ^ array [] of char;
type inline_data_t = array [ * : 2048 ] of char;

routine ipconfig_wait_if(	server : port_t;
				name : if_name_t);

routine ipconfig_wait_all(	server : port_t);

routine ipconfig_if_count(	server : port_t;
			 out	count : int);

routine ipconfig_if_name(	server : port_t;
				intface : int;
			 out	name : if_name_t);

routine ipconfig_get_option(	server : port_t;
				name : if_name_t;
				option_code : int;
			 out	option_data : inline_data_t);

routine ipconfig_if_addr(	server : port_t;
				name : if_name_t;
			 out	addr : ip_address_t);

routine ipconfig_get_packet(	server : port_t;
				name : if_name_t;
			 out	packet : inline_data_t);

routine ipconfig_set(		server : port_t;
				name : if_name_t;
				method : ipconfig_method_t;
				method_data : inline_data_t;
			 out	status : ipconfig_status_t );

